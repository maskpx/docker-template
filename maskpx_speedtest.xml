<?xml version="1.0"?>
<Container version="2">
  <Name>speedtest</Name>
  <Repository>henrywhitaker3/speedtest-tracker</Repository>
  <Registry>https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/</Registry>
  <Network>bridge</Network>
  <MyIP/>
  <Shell>sh</Shell>
  <Privileged>false</Privileged>
  <Support>https://github.com/maskpx/docker-template/issues</Support>
  <Project>https://hub.docker.com/r/henrywhitaker3/speedtest-tracker</Project>
  <Overview>This program runs a speedtest check every hour and graphs the results. The back-end is written in Laravel and the front-end uses React. It uses the speedtest-cli package to get the data and uses Chart.js to plot the results.&#xD;
&#xD;
</Overview>
  <Category>Tools:Utilities</Category>
  <WebUI>http://[IP]:[PORT:80]/</WebUI>
  <TemplateURL>https://raw.githubusercontent.com/maskpx/docker-template/master/maskpx_speedtest.xml</TemplateURL>
  <Icon>https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/speedtest-tracker.png</Icon>
  <ExtraParams>--restart unless-stopped</ExtraParams>
  <PostArgs/>
  <CPUset/>
  <DateInstalled>1615406123</DateInstalled>
  <DonateText/>
  <DonateLink/>
  <Description>This program runs a speedtest check every hour and graphs the results. The back-end is written in Laravel and the front-end uses React. It uses the speedtest-cli package to get the data and uses Chart.js to plot the results.&#xD;
&#xD;
</Description>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort/>
        <ContainerPort>80</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Config Name="WebUI" Target="80" Default="" Mode="tcp" Description="Container Port: 80" Type="Port" Display="always" Required="false" Mask="false"/>
  <Config Name="Appdata" Target="/config" Default="/mnt/user/appdata/speedtest-tracker" Mode="rw" Description="Container Path: /config" Type="Path" Display="always" Required="false" Mask="false">/mnt/user/appdata/speedtest-tracker</Config>
  <Config Name="Slack/Discord Webhook" Target="SLACK_WEBHOOK" Default="" Mode="" Description="Container Variable: SLACK_WEBHOOK" Type="Variable" Display="always" Required="false" Mask="false"/>
  <Config Name="OOKLA Accept EULA and GDPR" Target="OOKLA_EULA_GDPR" Default="false|true" Mode="" Description="Container Variable: OOKLA_EULA_GDPR" Type="Variable" Display="always" Required="true" Mask="false">true</Config>
  <Config Name="traefik.enable" Target="traefik.enable" Default="true" Mode="" Description="Enable Traefik" Type="Label" Display="always" Required="false" Mask="false">true</Config>
  <Config Name="traefik.http.routers.speedtest.rule" Target="traefik.http.routers.speedtest.rule" Default="Host(`speedtest.example.com`)" Mode="" Description="Container Label: traefik.http.services.speedtest.rule" Type="Label" Display="always" Required="false" Mask="false"></Config>
  <Config Name="traefik.http.services.speedtest.loadbalancer.server.port" Target="traefik.http.services.speedtest.loadbalancer.server.port" Default="80" Mode="" Description="Container Label: traefik.http.services.speedtest.loadbalancer.server.port" Type="Label" Display="always" Required="false" Mask="false">80</Config>
  <Config Name="traefik.http.routers.speedtest.middlewares" Target="traefik.http.routers.speedtest.middlewares" Default="secured@file" Mode="" Description="Container Label: traefik.http.routers.speedtest.middlewares" Type="Label" Display="always" Required="false" Mask="false">secured@file</Config>
  <Config Name="traefik.http.routers.speedtest.entrypoints" Target="traefik.http.routers.speedtest.entrypoints" Default="https" Mode="" Description="Container Label: traefik.http.routers.speedtest.entrypoints" Type="Label" Display="always" Required="false" Mask="false">https</Config>

</Container>